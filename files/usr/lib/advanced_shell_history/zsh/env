#!/bin/bash
#
# Author: cpa@google.com (Carl Anderson)
#

source "/usr/lib/advanced_shell_history/common" &>/dev/null || exit 1


setopt extended_history
setopt inc_append_history


##
# Invoked by ah::log in the common library (see parent directory).
#
function ah::last_command() {
  local cmd cmd_no start_ts end_ts=$( date +%s )
  read start_ts <<< "$( grep "^:" "${HISTFILE}" | tail -n1 | cut -d: -f2 )"
  read -r cmd_no cmd <<< "$( builtin history -1 )"
  echo -E ${cmd_no} ${start_ts} ${end_ts} "${cmd}"
}


##
# Placeholder function.
#
function ah::original_precmd() {
  :
}

# Rename the original precmd so it can still be invoked.
source <( typeset -f precmd | sed -e 's/^precmd/ah::original_precmd/' )


##
# Invoked before each new prompt is written, and after the previous command
# has finished.
#
function precmd() {
  AH_PIPESTATUS=( ${?} ${pipestatus[@]} )
  if [[ -z ${AH_SESSION_ID} ]]; then
    export AH_SESSION_ID="$( ash_log --get-session-id )"
    ah::notify "Advanced History is enabled (session: ${AH_SESSION_ID})."
    readonly AH_SESSION_ID
  else
    ah::log ${AH_PIPESTATUS[@]}
  fi
  ah::original_precmd

  local rval=${AH_PIPESTATUS[1]}
  AH_PIPESTATUS=( ${AH_PIPESTATUS[2,-1]} )
  ash_exit ${rval}
}
